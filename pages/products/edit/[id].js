import Head from 'next/head'
import Image from 'next/image'
import styles from '../../../styles/Profile.module.css'
import { useState } from 'react'
import { useRouter } from 'next/router'
import axios from 'axios'
import InputLabel from '@mui/material/InputLabel';
import MenuItem from '@mui/material/MenuItem';
import FormHelperText from '@mui/material/FormHelperText';
import FormControl from '@mui/material/FormControl';
import Select from '@mui/material/Select';
import FormGroup from '@mui/material/FormGroup';
import FormControlLabel from '@mui/material/FormControlLabel';
import Checkbox from '@mui/material/Checkbox';

function EditProduct({ data }) {
    const router = useRouter()
    const productId = router.query.id;
    const [imageFile, setImageFile] = useState(data.data.image)
    const [imageType, setImageType] = useState(null)
    const [name, setName] = useState(data.data.name)
    const [type, setType] = useState(data.data.type)
    const [price, setPrice] = useState(data.data.price)
    const [detail, setDetail] = useState(data.data.details)
    const [isActive, setIsActive] = useState(data.data.isActive)
    const [loading, setLoading] = useState(false)
    const upload = (event) => {
        let reader = new FileReader();
        const files = event.target.files[0];
        setImageType(files.type)
        reader.onloadend = () => {
            setImageFile(reader.result)
        }
        reader.readAsDataURL(files)
    }

    const removeImage = () => {
        setImageFile(null)
    }

    const editProduct = () => {
        setLoading(true)
        let data = {
            "productId": productId,
            "name": name,
            "image": imageFile,
            "imageType": imageType,
            "price": price,
            "details": detail,
            "status": 1,
            "isActive": isActive,
            "amount": 0,
            "type": type,
            "store": process.env.NEXT_PUBLIC_USER
        }
        axios.post(`${process.env.NEXT_PUBLIC_URL}api/v1/food/product/update`, data, {
            headers: {
                'Content-Type': 'application/json'
            }
        }).then(response => {
            setImageFile(null)
            setImageType(null)
            setName("")
            setDetail("")
            setLoading(false)
            router.back()
        })
    }

    const handleName = (event) => {
        setName(event.target.value)
    }

    const handlePrice = (event) => {
        setPrice(event.target.value)
    }

    const handleDetail = (event) => {
        setDetail(event.target.value)
    }

    const handleType = (event) => {
        setType(event.target.value)
    }

    return (
        <div className={styles.container} style={
            {
                padding: "20px",
            }
        }>
            <Head>
                <title>แก้ไขสินค้าของคุณ</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            {
                imageFile === null ?
                    <div className={styles.box_upload}>
                        <input type="file" className={styles.inputfile} onChange={upload} accept="image/*" />
                        <div className={styles.grid}>
                            <Image src='/photo.png' width={50} height={50} alt="image upload" />
                            <p>เพิ่มรูปภาพ</p>
                            หรือลากแล้ววาง
                        </div>
                    </div> : <div className={styles.box_upload}>
                        <button className={styles.removeButton} onClick={removeImage}>
                            <Image className={styles.cancel} src="/cancel.png" width={12} height={12} alt="cancel" />
                        </button>
                        <Image className={styles.imageupload} src={imageFile} width={500} height={350} alt="image upload" objectFit="cover" />
                    </div>
            }
            <input className={styles.inputText} type="text" placeholder="ชื่อ" value={name} onChange={handleName} />
            <input className={styles.inputText} type="number" placeholder="ราคา" value={price} onChange={handlePrice} />
            {/* <FormControl sx={{ m: 1}}> */}
            <Select
                labelId="demo-simple-select-helper-label"
                id="demo-simple-select-helper"
                value={type}
                onChange={handleType}
                displayEmpty
                inputProps={{ 'aria-label': 'Without label' }}
                className={styles.inputSelect}
            >
                <MenuItem value={1}>อาหาร</MenuItem>
                <MenuItem value={2}>ของหวาน</MenuItem>
                <MenuItem value={3}>เครื่องดื่ม</MenuItem>
            </Select>
            {/* </FormControl> */}
            <textarea className={styles.inputTextArea} type="text" rows="4" cols="50" placeholder="รายละเอียด" value={detail} onChange={handleDetail} />
            <FormGroup>
                <FormControlLabel control={<Checkbox checked={isActive} onChange={() => setIsActive(!isActive)} />} label={isActive?'สถานะ: เปิดใช้งาน':'สถานะ: ปิดใช้งาน'} />
            </FormGroup>

            <button className={styles.button} onClick={editProduct}>อัพเดทสินค้า</button>

            {loading ?
                <div className={styles.loading}>
                    <div className={styles.loader}></div>
                </div> : null
            }
        </div>
    )
}

export async function getServerSideProps(context) {
    const res = await axios.post(`${process.env.NEXT_PUBLIC_URL}api/v1/food/product/readById`, {
        "productId": context.query.id,
    })
    const data = await res.data
    console.log(data)
    return {
        props: {
            data
        },
    }
}

export default EditProduct
